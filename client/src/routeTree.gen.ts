/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedIdImport } from './routes/_authenticated/$id'
import { Route as AuthenticatedSearchTitleImport } from './routes/_authenticated/search/$title'
import { Route as AuthenticatedSearchIdImport } from './routes/_authenticated/search/$id'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedIdRoute = AuthenticatedIdImport.update({
  path: '/$id',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedSearchTitleRoute = AuthenticatedSearchTitleImport.update({
  path: '/search/$title',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedSearchIdRoute = AuthenticatedSearchIdImport.update({
  path: '/search/$id',
  getParentRoute: () => AuthenticatedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/$id': {
      id: '/_authenticated/$id'
      path: '/$id'
      fullPath: '/$id'
      preLoaderRoute: typeof AuthenticatedIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/search/$id': {
      id: '/_authenticated/search/$id'
      path: '/search/$id'
      fullPath: '/search/$id'
      preLoaderRoute: typeof AuthenticatedSearchIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/search/$title': {
      id: '/_authenticated/search/$title'
      path: '/search/$title'
      fullPath: '/search/$title'
      preLoaderRoute: typeof AuthenticatedSearchTitleImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthenticatedRoute: AuthenticatedRoute.addChildren({
    AuthenticatedIdRoute,
    AuthenticatedIndexRoute,
    AuthenticatedSearchIdRoute,
    AuthenticatedSearchTitleRoute,
  }),
  AboutRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/about"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/$id",
        "/_authenticated/",
        "/_authenticated/search/$id",
        "/_authenticated/search/$title"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/_authenticated/$id": {
      "filePath": "_authenticated/$id.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/search/$id": {
      "filePath": "_authenticated/search/$id.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/search/$title": {
      "filePath": "_authenticated/search/$title.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
